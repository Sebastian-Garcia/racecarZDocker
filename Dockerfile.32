FROM nvcr.io/nvidia/l4t-base:r32.6.1

ARG DEBIAN_FRONTEND=noninteractive
ARG ZED_SDK_VERSION="3.8"

ENV LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,video,utility \
    ROS_DISTRO=humble

ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV TZ=America/New_York
    
# Set timezone
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
    
# Configure locale
RUN apt-get update && apt-get install -y locales \
    && echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
    && locale-gen en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 \
    && rm -rf /var/lib/apt/lists/*


# RUN apt update && apt install -y zstd x11-utils x11-apps apt-utils
# For ZED Setup
# RUN wget https://download.stereolabs.com/zedsdk/4.2/l4t36.3/jetsons
# RUN chmod +x jetsons 
# RUN ./jetsons  -- silent

ENV XDG_RUNTIME_DIR=/tmp/runtime-root
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib/aarch64-linux-gnu/tegra


# ros2 installation
RUN apt-get update
RUN apt install -y software-properties-common
RUN add-apt-repository universe
RUN apt update && sudo apt install curl -y
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
RUN apt update && apt upgrade -y && apt install -y ros-humble-desktop ros-dev-tools
RUN . /opt/ros/humble/setup.sh 

# zed ros2 wrapper
RUN apt install -y git

RUN mkdir -p /root/ros2_ws/src && cd /root/ros2_ws/src && git clone https://github.com/stereolabs/zed-ros2-wrapper.git

RUN cd /root/ros2_ws && rosdep init && rosdep update && rosdep install --from-paths src --ignore-src -r -y

RUN . /opt/ros/humble/setup.sh && cd /root/ros2_ws && colcon build --symlink-install --cmake-args=-DCMAKE_BUILD_TYPE=Release --parallel-workers $(nproc)

# Installing pytorch
# COPY /assets /tmp
# ENV TORCH_INSTALL=/tmp/torch-2.3.0-cp310-cp310-linux_aarch64.whl
# ENV TORCHVISION_INSTALL=/tmp/torchvision-0.18.0a0+6043bc2-cp310-cp310-linux_aarch64.whl

RUN python3 -m pip install --upgrade pip &&  python3 -m pip install numpy==1.26.1 &&  python3 -m pip install --no-cache $TORCH_INSTALL

RUN python3 -m pip install --no-cache $TORCHVISION_INSTALL

RUN rm /tmp/torch*


# Install ros-drivers for sensors and stuff
#Hokuyo!

RUN cd /root/ros2_ws/src && git clone --recursive https://github.com/Hokuyo-aut/urg_node2.git && rosdep update && rosdep install -i --from-paths urg_node2 

RUN cd /root/ros2_ws && . /opt/ros/humble/setup.sh && colcon build --symlink-install


# VESC Setup
RUN cd /root/ros2_ws/src && git clone https://github.com/ros-drivers/transport_drivers.git 
RUN cd /root/ros2_ws && rosdep install --from-paths src --ignore-src -r -y && . /opt/ros/humble/setup.sh && colcon build


RUN apt update && apt install -y ros-humble-ackermann-msgs ros-humble-ros-testing

ARG REPO_BUST=""
RUN cd /root/ros2_ws/src \
 && echo "Forcing fresh clone if REPO_BUST changes: $REPO_BUST" \
 && git clone https://github.com/Sebastian-Garcia/racecarHardware4Orin.git
RUN cd /root/ros2_ws && . /opt/ros/humble/setup.sh && colcon build --symlink-install


# Install other useful tools, also add things to bashrc
RUN apt update && apt install -y vim

# Customize terminal appearance with custom display name
RUN echo 'export PS1="\[\e[38;5;214m\]🏎️ \[\e[38;5;39m\]racer\[\e[38;5;11m\]@\[\e[38;5;39m\]mit\[\e[38;5;11m\]:\[\e[38;5;83m\]\w\[\e[38;5;11m\]\\$ \[\e[0m\]"' >> /root/.bashrc && \
   echo 'alias ls="ls --color=auto"' >> /root/.bashrc && \
   echo 'export TERM=xterm-256color' >> /root/.bashrc


RUN apt-get update && apt-get install -y dialog lsof tigervnc-standalone-server tigervnc-common lxde websockify 
RUN mkdir -p /root/.vnc && echo "SecurityTypes=None" > /root/.vnc/config

RUN git clone https://github.com/novnc/noVNC.git /root/noVNC
RUN cd /root/noVNC && git checkout v1.4.0

RUN echo 'source /opt/ros/humble/setup.bash' >> /root/.bashrc
RUN echo 'source /root/ros2_ws/install/setup.bash' >> /root/.bashrc
RUN echo 'source /root/racecar_ws/install/setup.bash' >> /root/.bashrc

RUN echo 'export SCANNER_TYPE=hokuyo' >> /root/.bashrc

RUN echo 'alias teleop="ros2 launch racecar teleop.launch.xml"' >> /root/.bashrc

RUN chmod +x /root/ros2_ws/install/ackermann_cmd_mux/lib/ackermann_cmd_mux/throttle_interpolator.py

USER root
WORKDIR /root
